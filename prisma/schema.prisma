generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Species {
  CAT
  DOG
}

enum PendingStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum PendingCategory {
  VACCINATION
  TREATMENT
  VET_CONTROL
  CLINICAL_UPDATE
  DAILY_CARE
  PREVENTION
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  phone         String         @unique
  pets          Pet[]          @relation("UserPets")
  pendings      Pending[]
  AuthToken     AuthToken[]
  consultations Consultation[]
}

model AuthToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  phone     String
  userId    Int
  createdAt DateTime @default(now())
  expiresAt DateTime
  used      Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])

  @@index([token])
  @@index([phone])
}

model Pet {
  id            Int            @id @default(autoincrement())
  name          String
  dateOfBirth   DateTime
  species       Species
  owners        User[]         @relation("UserPets")
  consultations Consultation[]
}

model Pending {
  id             Int             @id @default(autoincrement())
  title          String
  description    String?
  status         PendingStatus
  category       PendingCategory
  date           DateTime?
  reminderConfig Json?
  user           User            @relation(fields: [userId], references: [id])
  userId         Int
}

model Consultation {
  id              Int      @id @default(autoincrement())
  petId           Int
  userId          Int
  date            DateTime
  chiefComplaint  String
  findings        String?
  diagnosis       String?
  treatment       String?
  nextSteps       String?
  additionalNotes String?
  createdAt       DateTime @default(now())

  pet  Pet  @relation(fields: [petId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@index([petId])
  @@index([userId])
  @@index([date])
}
